---
## Front matter
title: "Отчёт по лабораторной работе №1"
subtitle: "Администрирование локальных сетей"
author: "Ищенко Ирина НПИбд-02-22"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: true # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: IBM Plex Serif
romanfont: IBM Plex Serif
sansfont: IBM Plex Sans
monofont: IBM Plex Mono
mathfont: STIX Two Math
mainfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
romanfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
sansfontoptions: Ligatures=Common,Ligatures=TeX,Scale=MatchLowercase,Scale=0.94
monofontoptions: Scale=MatchLowercase,Scale=0.94,FakeStretch=0.9
mathfontoptions:
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lotTitle: "Список таблиц"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

# Цель работы

Установка инструмента моделирования конфигурации сети Cisco Packet
Tracer, знакомство с его интерфейсом [@netadmin].

# Выполнение лабораторной работы

В рабочем пространстве разместим концентратор (Hub-PT) и четыре оконечных устройства PC. Соединим оконечные устройства с концентратором прямым кабелем (рис. [-@fig:001]). Щёлкнув последовательно на каждом оконечном устройстве, зададим статические IP-адреса 192.168.1.11 (рис. [-@fig:002]), 192.168.1.12,192.168.1.13, 192.168.1.14 с маской подсети 255.255.255.0.

![Модель простой сети с концентратором](image/1.png){#fig:001 width=70%}

![IP-адрес устройства](image/2.png){#fig:002 width=70%}

В основном окне проекта перейдем из режима реального времени (Realtime) в режим моделирования (Simulation). Выберем на панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем сначала на PC0, затем на PC2. В рабочей области появились два конверта, обозначающих пакеты, в списке событий на панели моделирования появились два события, относящихся к пакетам ARP и ICMP соответственно (рис. [-@fig:003]).
На панели моделирования нажмем кнопку «Play» и проследим за движением пакетов ARP и ICMP от устройства PC0 до устройства PC2 и обратно.

![Добавление простого PDU](image/3.png){#fig:003 width=70%}

Щёлкнув на строке события, откроем окно информации о PDU и изучим, что происходит на уровне модели OSI при перемещении пакета. Пакет передается концентратору, так как он является широковещательным, то далее пакет пересылается остальным подсоединенным устройствам. Используя кнопку «Проверь себя» (Challenge Me) на вкладке OSI Model, ответим на вопросы (рис. [-@fig:004]).

![PDU пакет ARP](image/4.png){#fig:004 width=70%}

Откроем вкладку с информацией о PDU. Исследуем структуру пакета ICMP (рис. [-@fig:005]). Изначально в PDU есть только заголовок IP, в котором есть соответсвенно информация об IP-адресах источника и назначения. Также там есть заголовок ICMP. В нем содержится данные о типе ICMP-пакета, его коде, контрольной сумме, его идентификаторе и порядковом номере. Эти заголовки остаются постоянными при передаче. 

Далее появляется кадр Ethernet. Тут есть поле преамбула — 7 байт для синхронизации. Поле SFD. Destination Address — Ethernet-адрес получателя, 6 байт. Source Address — Ethernet-адрес отправителя, 6 байт. Type — тип, для обозначения типа протокола уровня. FCS — frame check sequence, 4 байта, поле контрольной последовательности фрейма.

Рассмотрим структуру mac-адреса. 000D.BD20.60D1 - адрес назначения PC2. 0030.A303.83E2  - адрес источника PC1. Первые 3 байта указывают на производителя (в нашем случае CISCO), следующие 3 байта указывают на идентификатор устройства.

![Структура пакета ICMP](image/5.png){#fig:005 width=70%}

Очистим список событий, удалив сценарий моделирования. Выберем на панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем сначала на PC0, затем на PC2. Снова выберем на панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем сначала на PC2, затем на PC0. На панели моделирования нажмем кнопку «Play» и проследим за возникновением коллизии (рис. [-@fig:006], [-@fig:007]).

![Сценарий коллизии](image/6.png){#fig:006 width=70%}

![Коллизия](image/7.png){#fig:007 width=70%}

В списке событий посмотрим информацию о PDU (рис. [-@fig:008]).
Коллизия возникла, так как концентратор широковещательный и в один момент времени может передавать только один пакет. При столкновении же пакетов происходит коллизия и данные теряются. После столкновения информации в пакете утеряна.

![пакет ICMP после коллизии](image/8.png){#fig:008 width=70%}

Перейдем в режим реального времени (Realtime). В рабочем пространстве
разместим коммутатор (например Cisco 2950-24) и 4 оконечных устройства
PC. Соединим оконечные устройства с коммутатором прямым кабелем.
Щёлкнув последовательно на каждом оконечном устройстве, зададим статические IP-адреса 192.168.1.21, 192.168.1.22, 192.168.1.23, 192.168.1.24 с маской подсети 255.255.255.0.
В основном окне проекта перейдем из режима реального времени (Realtime)
в режим моделирования (Simulation). Выберем на панели инструментов
мышкой «Add Simple PDU (P)» и щёлкнем сначала на PC4, затем на PC6 (рис. [-@fig:009]). На панели моделирования нажмем кнопку «Play» и проследим за движением пакетов ARP и ICMP от устройства PC4 до устройства PC6 и обратно. 

![Структура пакета ICMP](image/9.png){#fig:009 width=70%}

При передаче пакета ARP изначально пакет рассылается всем оконечным устройствам, на обратном же отправляется только устройству назначения. В случае пакета ICMP передача происходит сразу к устройству назначения.

Исследуем структуру пакета ICMP (рис. [-@fig:0010]). Изначально в PDU есть только заголовок IP, в котором есть соответсвенно информация об IP-адресах источника и назначения. Также там есть заголовок ICMP. В нем содержится данные о типе ICMP-пакета, его коде, контрольной сумме, его идентификаторе и порядковом номере. Эти заголовки остаются постоянными при передаче. 

Далее появляется кадр Ethernet. Тут есть поле преамбула — 7 байт для синхронизации. Поле SFD. Destination Address — Ethernet-адрес получателя, 6 байт. Source Address — Ethernet-адрес отправителя, 6 байт. Type — тип, для обозначения типа протокола уровня. FCS — frame check sequence, 4 байта, поле контрольной последовательности фрейма.

Пакет отправляется на коммутатор, в заголовке указаны mac-адреса, в которых указано, что пакет идет от ПК4 к ПК6. 
Рассмотрим структуру mac-адресса. 000D.BD28.AD39 - адрес назначения PC6. 00D0.FFD9.4DDE  - адрес источника PC4. Первые 3 байта указывают на производителя (в нашем случае CISCO), следующие 3 байта указывают на идентификатор устройства.

![Структура пакета ICMP](image/10.png){#fig:0010 width=70%}

Очистим список событий, удалив сценарий моделирования. Выберем на
панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем сначала
на PC4, затем на PC6. Снова выберем на панели инструментов мышкой
«Add Simple PDU (P)» и щёлкнем сначала на PC6, затем на PC4. На
панели моделирования нажмите кнопку «Play» и проследим за движением
пакетов (рис. [-@fig:0011]). 

Коллизия не возникает, потому что коммутатор использует таблицу MAC-адресов и поддерживает дуплексное соединение, то есть единомоментно может передавать сразу несколько пакетов.

![Сценарий коллизии](image/11.png){#fig:0011 width=70%}

Перейдем в режим реального времени (Realtime). В рабочем пространстве соединим кроссовым кабелем концентратор и коммутатор. Перейдем в режим моделирования (Simulation). Очистим список событий, удалив сценарий моделирования. Выберем на панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем сначала на PC0, затем на PC4. Снова выберем на панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем
сначала на PC4, затем на PC0. На панели моделирования нажмем кнопку
«Play» и проследим за движением пакетов (рис. [-@fig:0012]). 

Пакет, который отправлен из сети с хабом, как и в прошлый раз исчезает. А пакет, отправленный из сети с коммутатором достигает своего назначения. Так получается, потому что коммутатор может работать в режиме полного дуплекса (двунаправленная передача данных. Способность устройства или линии связи передавать данные одновременно в обоих направлениях по одному каналу, потенциально удваивая пропускную способность). 

![Сценарий коллизии с коммутатором и концентратором](image/12.png){#fig:0012 width=70%}

Очистим список событий, удалив сценарий моделирования. На панели
моделирования нажмем «Play» и в списке событий получим пакеты STP. 

Исследуем структуру STP (рис. [-@fig:0013]). 
Опишем структуру кадра Ethernet. В STP пакетах кадр Ethernet имеет тип 802.3. В нем указана преамбула, mac-адреса источника и назначения и длина.
Структура mac-адресов осталась прежней.

![STP](image/13.png){#fig:0013 width=70%}

Перейдем в режим реального времени (Realtime). В рабочем пространстве добавим маршрутизатор Cisco 2811. Соединим прямым кабелем коммутатор и маршрутизатор. Щёлкнем на маршрутизаторе и на вкладке его конфигурации пропишем статический IP-адрес 192.168.1.254 с маской 255.255.255.0, активируем порт, поставив галочку
«On» напротив «Port Status».
Перейдем в режим моделирования (Simulation). Очистим список событий, удалив сценарий моделирования. Выберем на панели инструментов мышкой «Add Simple PDU (P)» и щёлкнем сначала на PC3, затем на маршрутизаторе. На панели моделирования нажмем кнопку «Play» и проследим за движением пакетов ARP, ICMP, STP и CDP (рис. [-@fig:0014]). 

![Сценарий с маршрутизатором](image/14.png){#fig:0014 width=70%}

Исследуем структуру пакета CDP (рис. [-@fig:0015]). 
Структура кадра Ethernet 802.3 такая же как в пакетах STP и mac-адреса также остались прежними.

![СDP](image/15.png){#fig:0015 width=70%}

# Выводы

В ходе выполнения лабораторной работы я установила инструмент моделирования конфигурации сети Cisco Packet Tracer и познакомилась с его интерфейсом.

# Ответы на контрольные вопросы

1. 
Концентратор - это простое сетевое устройство, которое соединяет несколько компьютеров в одной сети. Концентратор передает все полученные данные на все порты, вне зависимости от того, для какого устройства эти данные предназначены.

Коммутатор - это устройство, которое соединяет несколько устройств в одной локальной сети (LAN) и передает данные только на тот порт, к которому подключено нужное устройство. Это повышает производительность и безопасность сети. Используется для организации эффективных локальных сетей, особенно когда нужно уменьшить коллизии данных и повысить скорость.

Маршрутизатор - устройство, которое соединяет несколько сетей между собой (например, локальную сеть и Интернет). Маршрутизатор определяет лучший маршрут для передачи данных между сетями. 

Шлюз (Gateway) - это устройство или программа, которая служит точкой входа из одной сети в другую, часто с разными протоколами. Шлюзы могут выполнять функции преобразования данных между различными форматами.

2. 
IP-адрес - уникальный числовой идентификатор устройства в сети, позволяющий маршрутизировать данные. Существует IPv4 (например, 192.168.1.1) и IPv6 (например, 2001:0db8:85a3:0000:0000:8a2e:0370:7334).

Сетевая маска используется для разделения IP-адреса на сеть и узел. Она определяет, какая часть адреса относится к сети, а какая — к конкретному устройству (например, 255.255.255.0).

Broadcast-адрес - адрес, на который отправляются пакеты, предназначенные всем устройствам в сети. Например, для сети 192.168.1.0 с маской 255.255.255.0 broadcast-адрес будет 192.168.1.255.

3. 
Команда ping отправляет ICMP-запросы на указанный IP-адрес или доменное имя. Если узел доступен, вы получите ответы с указанием времени отклика.

Команда trace показывает путь, по которому проходят пакеты до целевого узла, отображая все промежуточные маршрутизаторы.


# Список литературы{.unnumbered}

::: {#refs}
:::
